// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportAndStepsApps.Data;

#nullable disable

namespace SportAndStepsApps.Migrations
{
    [DbContext(typeof(SportsContext))]
    partial class SportsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("SportAndStepsApps.Models.SportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SportTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Run"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Swim"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ride"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Walk"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hike"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Trail run"
                        });
                });

            modelBuilder.Entity("SportAndStepsApps.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SportAndStepsApps.Models.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumOfSteps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SportId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SportTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SportTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("SportAndStepsApps.Models.UserActivity", b =>
                {
                    b.HasOne("SportAndStepsApps.Models.SportType", "SportType")
                        .WithMany()
                        .HasForeignKey("SportTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAndStepsApps.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportType");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
